% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Reduce.R
\name{reduceargs}
\alias{reduceargs}
\alias{\%|.\%}
\alias{\%.|\%}
\title{Use function to reduce or expand arguments.}
\usage{
f \%|.\% args

args \%.|\% f
}
\arguments{
\item{f}{function}

\item{args}{argument list or vector}
}
\value{
f(args) where args elements become individual arguments of f.
}
\description{
Use function \code{f} to reduce arguments \code{ars} (inspired by APL reduce/expand notation).
This is essentially passing multiple values from a list as multiple independent arguments to a
function.  So this can be used to supply a standard evaluation interface for variadic functions.
\code{f \%|.\% args} is roughly equivalent to \code{do.call(f, args)}.
}
\details{
Note: these two operators are still experimental extensions.  They will
require more training material and use cases before they are fully
advised.
}
\section{Functions}{
\itemize{
\item \code{\%|.\%}: f reduce args

\item \code{\%.|\%}: args expand f
}}

\examples{

# basic examples
c(1, 2, 3) \%.|\% sum
c(1, 2, 3) \%.|\% base::sum
c(1, 2, 3) \%.|\% function(...) { sum(...) }

# partial application of log(5, base=2)
5 \%.>\% (c(., base=2) \%.|\% log)

# # partial application with dplyr
# # can be used with dplyr/rlang as follows
# d <- data.frame(x=1, y=2, z=3)
# syms <- rlang::syms(c("x", "y"))
# d \%.>\% (c(list(.), syms) \%.|\% dplyr::select)

}
